<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>서포크레딧 Wordle 게임</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            margin: 0;
            padding: 20px;
            box-sizing: border-box;
            background-color: #ffffff;
            color: #331fd2;
        }

        h1, h2, #message {
            text-align: center;
            color: #5b72f4;
        }

        .intro {
            text-align: center;
            margin-top: 50px;
        }

        .intro-title {
            font-size: 32px;
            margin-bottom: 20px;
            color: #331fd2;
        }

        .intro-instructions {
            font-size: 18px;
            margin-bottom: 10px;
            line-height: 1.5;
            color: #5b72f4;
        }

        #start-button, #guess-button, #continue-button {
            font-size: 18px;
            padding: 10px 20px;
            margin: 20px;
            background-color: #5b72f4;
            color: #ffffff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        #game-container {
            text-align: center;
        }

        #word-list-container {
            margin-bottom: 20px;
            text-align: center;
        }

        .word-item {
            display: inline-block;
            padding: 5px 10px;
            margin: 5px;
            border: 1px solid #ddd;
            cursor: pointer;
            color: #331fd2;
            background-color: #e0e7ff;
            border-radius: 5px;
        }

        #game-board {
            display: grid;
            gap: 10px;
            margin-bottom: 20px;
            justify-content: center;
        }

        .tile {
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            border: 2px solid #ddd;
            background-color: #ffffff;
            color: #331fd2;
            border-radius: 5px;
        }

        .green {
            background-color: #5b72f4;
            color: white;
        }

        .yellow {
            background-color: #331fd2;
            color: white;
        }

        .gray {
            background-color: #c0c0c0;
            color: white;
        }

        #guess-input {
            font-size: 18px;
            padding: 5px;
            margin-bottom: 10px;
            color: #331fd2;
            border: 1px solid #5b72f4;
            border-radius: 5px;
        }

        #error-message {
            color: red;
            font-size: 16px;
            margin-top: 10px;
        }

        #modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        #modal-content {
            background: white;
            padding: 20px;
            text-align: center;
            border-radius: 8px;
            width: 300px;
            color: #331fd2;
        }
    </style>
</head>
<body>
    <h1>서포크레딧 Wordle 게임</h1>
    <div class="intro" id="intro">
        <p class="intro-title">대학생 신용홍보단에 대해 알아보자!</p>
        <p class="intro-instructions">주어진 문장을 읽고 주어진 단어 목록의 단어를 조합하여 빈칸에 들어갈 알맞은 단어를 추측해보세요.</p>
        <p class="intro-instructions">문제별로 6번 시도할 수 있고, 사용되는 단어이면 노란색, 사용되는 단어이면서 위치까지 맞으면 초록색으로 표시됩니다!</p>
        <button id="start-button">게임 시작</button>
    </div>
    
    <div id="game-container" style="display: none;">
        <h2 id="sentence"></h2>
        <div id="word-list-container">
            <h3>사용 가능한 단어 리스트</h3>
            <div id="word-list"></div>
        </div>
        <div id="game-board"></div>
        <input type="text" id="guess-input" placeholder="단어 입력">
        <button id="guess-button">추측</button>
        <p id="message"></p>
        <p id="error-message" style="display: none;">단어 목록에 있는 단어를 사용해주세요.</p>
    </div>

    <div id="modal">
        <div id="modal-content">
            <p id="modal-message"></p>
            <button id="continue-button">계속</button>
        </div>
    </div>

    <script>
        const sets = [
            {
                sentence: "대학생 신용홍보단은 OOOOOO에서 주최하는 활동이다",
                answer: "여신금융협회",
                wordList: ["한", "금", "여", "회", "신", "곰", "가", "융", "정", "협"],
                maxLength: 6,
                extraMessage: "여신금융협회는 여신전문금융업에 대한 연구개발 및 홍보를 통해\n여신전문금융업의 건전한 발전을 추구하는 1998년 설립된 비영리 사단법인입니다."
            },
            {
                sentence: "대학생 OOOOO은 다양한 신용 지식을 습득하고 이를 영상, 카드뉴스, 부스활동 등의 다양한 활동을 통해 여신, 금융 지식을 홍보한다.",
                answer: "신용홍보단",
                wordList: ["서", "보", "레", "홍", "크", "단", "회", "용", "신", "년"],
                maxLength: 5,
                extraMessage: "대학생 신용 홍보단은 대학생의 시선에서 대학생, 청년에게 유익한 금융, 여신 정보를 전달하는 것이 목표입니다!"
            },
            {
                sentence: "대학생 신용홍보단은 OOOOO으로도 불리며, 이는 돕는다는 의미의 SUPPORT와 신용을 뜻하는 CREDIT의 합성어이다",
                answer: "서포크레딧",
                wordList: ["단", "크", "홍", "서", "초", "포", "회", "딧", "용", "레"],
                maxLength: 5,
                extraMessage: "서포크레딧 활동은 2024년 기준 8기수 까지 진행되었고, 다양한 금융, 여신 정보를 전달하는 영상, 카드뉴스 제작과 부스활동을 진행하고 있습니다. 컨텐츠 제작 능력과 창의력을 발휘할 수 있다면 당신도 서포크레딧 단원이 될 수 있습니다!"
            },
            {
                sentence: "대학생 신용홍보단은 갓 성인이 된 대학생, 직장을 갖게된 OOOOO 계층을 대상으로 금융 지식을 홍보하고자 노력해야한다!",
                answer: "사회초년생",
                wordList: ["보", "사", "생", "크", "딧", "회", "용", "레", "년", "초"],
                maxLength: 5,
                extraMessage: "같은 사회 초년생의 시선에서 다양한 방면에서 자신의 재능을 살려 신용에 대해 학습하고 소개하는 보람을 느끼고 싶다면 대학생 신용홍보단 활동만큼 값진 활동이 있을까요?"
            }
        ];

        let currentSetIndex = 0;
        let attempts = 6;

        const intro = document.getElementById('intro');
        const gameContainer = document.getElementById('game-container');
        const sentenceElement = document.getElementById('sentence');
        const gameBoard = document.getElementById('game-board');
        const guessInput = document.getElementById('guess-input');
        const guessButton = document.getElementById('guess-button');
        const message = document.getElementById('message');
        const errorMessage = document.getElementById('error-message');
        const wordListContainer = document.getElementById('word-list');
        const modal = document.getElementById('modal');
        const modalMessage = document.getElementById('modal-message');
        const continueButton = document.getElementById('continue-button');

        document.getElementById('start-button').addEventListener('click', startGame);
        continueButton.addEventListener('click', () => {
            closeModal();
            if (currentSetIndex < sets.length) {
                resetGame();
            } else {
                message.textContent = "축하합니다! 모든 세트를 완료하셨습니다.";
            }
        });

        function startGame() {
            intro.style.display = 'none';
            gameContainer.style.display = 'block';
            resetGame();
        }

        function resetGame() {
            const set = sets[currentSetIndex];
            sentenceElement.textContent = set.sentence;
            wordListContainer.innerHTML = '';
            guessInput.setAttribute("maxlength", set.maxLength);
            guessInput.setAttribute("placeholder", `${set.maxLength}글자 단어 입력`);
            gameBoard.style.gridTemplateColumns = `repeat(${set.maxLength}, 50px)`;
            set.wordList.forEach(word => {
                const wordItem = document.createElement('div');
                wordItem.textContent = word;
                wordItem.classList.add('word-item');
                wordListContainer.appendChild(wordItem);
                wordItem.addEventListener('click', () => {
                    guessInput.value += word;
                });
            });
            createTiles(set.maxLength);
            attempts = 6;
            message.textContent = '';
            errorMessage.style.display = 'none';
            guessButton.disabled = false;
            guessInput.disabled = false;
            guessInput.value = '';  // 새 게임 시작 시 입력창 초기화
        }

        function createTiles(maxLength) {
            gameBoard.innerHTML = '';
            for (let i = 0; i < attempts * maxLength; i++) {
                const tile = document.createElement('div');
                tile.classList.add('tile');
                gameBoard.appendChild(tile);
            }
        }

        function evaluateGuess(guess) {
            let result = [];
            let answerArray = sets[currentSetIndex].answer.split('');

            for (let i = 0; i < sets[currentSetIndex].maxLength; i++) {
                if (guess[i] === answerArray[i]) {
                    result.push('green');
                    answerArray[i] = null;
                } else if (answerArray.includes(guess[i])) {
                    result.push('yellow');
                    answerArray[answerArray.indexOf(guess[i])] = null;
                } else {
                    result.push('gray');
                }
            }

            return result;
        }

        function updateBoard(guess, result, maxLength) {
            const tiles = document.querySelectorAll('.tile');
            const row = (6 - attempts) * maxLength;

            for (let i = 0; i < maxLength; i++) {
                tiles[row + i].textContent = guess[i];
                tiles[row + i].classList.add(result[i]);
            }
        }

        function showModal(message) {
            modalMessage.innerHTML = message.replace(/\n/g, "<br>");  // 줄바꿈 처리
            modal.style.display = 'flex';
            currentSetIndex++;
        }

        function closeModal() {
            modal.style.display = 'none';
        }

        guessButton.addEventListener('click', () => {
            const set = sets[currentSetIndex];
            const guess = guessInput.value;

            if (!set.wordList.some(word => guess.includes(word))) {
                errorMessage.style.display = 'block';
                return;
            } else {
                errorMessage.style.display = 'none';
            }

            if (guess.length !== set.maxLength) {
                message.textContent = `${set.maxLength}글자 단어를 입력해 주세요.`;
                return;
            }

            const result = evaluateGuess(guess);
            updateBoard(guess, result, set.maxLength);
            attempts--;

            if (guess === set.answer) {
                message.textContent = `축하합니다! 정답을 맞추셨습니다.`;
                guessButton.disabled = true;
                guessInput.disabled = true;
                showModal(`정답을 맞추셨습니다!<br><br>${set.extraMessage}<br><br>계속 버튼을 눌러 다음 문제로 이동하세요.`);
            } else if (attempts === 0) {
                message.textContent = `죄송합니다, 모든 시도를 사용했습니다. 정답은: ${set.answer}`;
                guessButton.disabled = true;
                guessInput.disabled = true;
                showModal(`정답은 ${set.answer}입니다.<br><br>${set.extraMessage}<br><br>계속 버튼을 눌러 다음 문제로 이동하세요.`);
            } else {
                message.textContent = `남은 시도 횟수: ${attempts}`;
            }

            guessInput.value = '';
        });

        resetGame();
    </script>
</body>
</html>
